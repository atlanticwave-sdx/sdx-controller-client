# This workflow will install Python dependencies, run tests and lint
# with a variety of Python versions For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - name: Check out sources
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # caching pip dependencies

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 tox black coveralls

    - name: Run code formatting checks with black
      run: |
        python -m black --check .

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 . --count --exit-zero --max-complexity=10 --statistics

    - name: Test with tox
      run: |
        tox
      env:
        SDXCONTROLLER_HOST: 'localhost'
        SDXCONTROLLER_PORT: '8080'
        SDXCONTROLLER_VERSION: '1.0.0'

    - name: Send coverage data to coveralls.io
      run: |
        python -m coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
        COVERALLS_PARALLEL: true

  finalize:
    name: finalize
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Indicate completion to coveralls.io
        run: |
          pip --no-cache-dir install --upgrade coveralls
          python -m coveralls --service=github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
